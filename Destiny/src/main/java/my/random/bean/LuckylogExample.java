package my.random.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LuckylogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public LuckylogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSeqIsNull() {
            addCriterion("seq is null");
            return (Criteria) this;
        }

        public Criteria andSeqIsNotNull() {
            addCriterion("seq is not null");
            return (Criteria) this;
        }

        public Criteria andSeqEqualTo(Long value) {
            addCriterion("seq =", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotEqualTo(Long value) {
            addCriterion("seq <>", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqGreaterThan(Long value) {
            addCriterion("seq >", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqGreaterThanOrEqualTo(Long value) {
            addCriterion("seq >=", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqLessThan(Long value) {
            addCriterion("seq <", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqLessThanOrEqualTo(Long value) {
            addCriterion("seq <=", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqIn(List<Long> values) {
            addCriterion("seq in", values, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotIn(List<Long> values) {
            addCriterion("seq not in", values, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqBetween(Long value1, Long value2) {
            addCriterion("seq between", value1, value2, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotBetween(Long value1, Long value2) {
            addCriterion("seq not between", value1, value2, "seq");
            return (Criteria) this;
        }

        public Criteria andGnoIsNull() {
            addCriterion("gno is null");
            return (Criteria) this;
        }

        public Criteria andGnoIsNotNull() {
            addCriterion("gno is not null");
            return (Criteria) this;
        }

        public Criteria andGnoEqualTo(Integer value) {
            addCriterion("gno =", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoNotEqualTo(Integer value) {
            addCriterion("gno <>", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoGreaterThan(Integer value) {
            addCriterion("gno >", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("gno >=", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoLessThan(Integer value) {
            addCriterion("gno <", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoLessThanOrEqualTo(Integer value) {
            addCriterion("gno <=", value, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoIn(List<Integer> values) {
            addCriterion("gno in", values, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoNotIn(List<Integer> values) {
            addCriterion("gno not in", values, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoBetween(Integer value1, Integer value2) {
            addCriterion("gno between", value1, value2, "gno");
            return (Criteria) this;
        }

        public Criteria andGnoNotBetween(Integer value1, Integer value2) {
            addCriterion("gno not between", value1, value2, "gno");
            return (Criteria) this;
        }

        public Criteria andNickIsNull() {
            addCriterion("nick is null");
            return (Criteria) this;
        }

        public Criteria andNickIsNotNull() {
            addCriterion("nick is not null");
            return (Criteria) this;
        }

        public Criteria andNickEqualTo(String value) {
            addCriterion("nick =", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotEqualTo(String value) {
            addCriterion("nick <>", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickGreaterThan(String value) {
            addCriterion("nick >", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickGreaterThanOrEqualTo(String value) {
            addCriterion("nick >=", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLessThan(String value) {
            addCriterion("nick <", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLessThanOrEqualTo(String value) {
            addCriterion("nick <=", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickLike(String value) {
            addCriterion("nick like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotLike(String value) {
            addCriterion("nick not like", value, "nick");
            return (Criteria) this;
        }

        public Criteria andNickIn(List<String> values) {
            addCriterion("nick in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotIn(List<String> values) {
            addCriterion("nick not in", values, "nick");
            return (Criteria) this;
        }

        public Criteria andNickBetween(String value1, String value2) {
            addCriterion("nick between", value1, value2, "nick");
            return (Criteria) this;
        }

        public Criteria andNickNotBetween(String value1, String value2) {
            addCriterion("nick not between", value1, value2, "nick");
            return (Criteria) this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("grade is null");
            return (Criteria) this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("grade is not null");
            return (Criteria) this;
        }

        public Criteria andGradeEqualTo(Integer value) {
            addCriterion("grade =", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotEqualTo(Integer value) {
            addCriterion("grade <>", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThan(Integer value) {
            addCriterion("grade >", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("grade >=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThan(Integer value) {
            addCriterion("grade <", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThanOrEqualTo(Integer value) {
            addCriterion("grade <=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeIn(List<Integer> values) {
            addCriterion("grade in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotIn(List<Integer> values) {
            addCriterion("grade not in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeBetween(Integer value1, Integer value2) {
            addCriterion("grade between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("grade not between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andNo1IsNull() {
            addCriterion("no1 is null");
            return (Criteria) this;
        }

        public Criteria andNo1IsNotNull() {
            addCriterion("no1 is not null");
            return (Criteria) this;
        }

        public Criteria andNo1EqualTo(Integer value) {
            addCriterion("no1 =", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotEqualTo(Integer value) {
            addCriterion("no1 <>", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1GreaterThan(Integer value) {
            addCriterion("no1 >", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1GreaterThanOrEqualTo(Integer value) {
            addCriterion("no1 >=", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1LessThan(Integer value) {
            addCriterion("no1 <", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1LessThanOrEqualTo(Integer value) {
            addCriterion("no1 <=", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1In(List<Integer> values) {
            addCriterion("no1 in", values, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotIn(List<Integer> values) {
            addCriterion("no1 not in", values, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1Between(Integer value1, Integer value2) {
            addCriterion("no1 between", value1, value2, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotBetween(Integer value1, Integer value2) {
            addCriterion("no1 not between", value1, value2, "no1");
            return (Criteria) this;
        }

        public Criteria andNo2IsNull() {
            addCriterion("no2 is null");
            return (Criteria) this;
        }

        public Criteria andNo2IsNotNull() {
            addCriterion("no2 is not null");
            return (Criteria) this;
        }

        public Criteria andNo2EqualTo(Integer value) {
            addCriterion("no2 =", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotEqualTo(Integer value) {
            addCriterion("no2 <>", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2GreaterThan(Integer value) {
            addCriterion("no2 >", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2GreaterThanOrEqualTo(Integer value) {
            addCriterion("no2 >=", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2LessThan(Integer value) {
            addCriterion("no2 <", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2LessThanOrEqualTo(Integer value) {
            addCriterion("no2 <=", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2In(List<Integer> values) {
            addCriterion("no2 in", values, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotIn(List<Integer> values) {
            addCriterion("no2 not in", values, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2Between(Integer value1, Integer value2) {
            addCriterion("no2 between", value1, value2, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotBetween(Integer value1, Integer value2) {
            addCriterion("no2 not between", value1, value2, "no2");
            return (Criteria) this;
        }

        public Criteria andNo3IsNull() {
            addCriterion("no3 is null");
            return (Criteria) this;
        }

        public Criteria andNo3IsNotNull() {
            addCriterion("no3 is not null");
            return (Criteria) this;
        }

        public Criteria andNo3EqualTo(Integer value) {
            addCriterion("no3 =", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotEqualTo(Integer value) {
            addCriterion("no3 <>", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3GreaterThan(Integer value) {
            addCriterion("no3 >", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3GreaterThanOrEqualTo(Integer value) {
            addCriterion("no3 >=", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3LessThan(Integer value) {
            addCriterion("no3 <", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3LessThanOrEqualTo(Integer value) {
            addCriterion("no3 <=", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3In(List<Integer> values) {
            addCriterion("no3 in", values, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotIn(List<Integer> values) {
            addCriterion("no3 not in", values, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3Between(Integer value1, Integer value2) {
            addCriterion("no3 between", value1, value2, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotBetween(Integer value1, Integer value2) {
            addCriterion("no3 not between", value1, value2, "no3");
            return (Criteria) this;
        }

        public Criteria andNo4IsNull() {
            addCriterion("no4 is null");
            return (Criteria) this;
        }

        public Criteria andNo4IsNotNull() {
            addCriterion("no4 is not null");
            return (Criteria) this;
        }

        public Criteria andNo4EqualTo(Integer value) {
            addCriterion("no4 =", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotEqualTo(Integer value) {
            addCriterion("no4 <>", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4GreaterThan(Integer value) {
            addCriterion("no4 >", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4GreaterThanOrEqualTo(Integer value) {
            addCriterion("no4 >=", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4LessThan(Integer value) {
            addCriterion("no4 <", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4LessThanOrEqualTo(Integer value) {
            addCriterion("no4 <=", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4In(List<Integer> values) {
            addCriterion("no4 in", values, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotIn(List<Integer> values) {
            addCriterion("no4 not in", values, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4Between(Integer value1, Integer value2) {
            addCriterion("no4 between", value1, value2, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotBetween(Integer value1, Integer value2) {
            addCriterion("no4 not between", value1, value2, "no4");
            return (Criteria) this;
        }

        public Criteria andNo5IsNull() {
            addCriterion("no5 is null");
            return (Criteria) this;
        }

        public Criteria andNo5IsNotNull() {
            addCriterion("no5 is not null");
            return (Criteria) this;
        }

        public Criteria andNo5EqualTo(Integer value) {
            addCriterion("no5 =", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotEqualTo(Integer value) {
            addCriterion("no5 <>", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5GreaterThan(Integer value) {
            addCriterion("no5 >", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5GreaterThanOrEqualTo(Integer value) {
            addCriterion("no5 >=", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5LessThan(Integer value) {
            addCriterion("no5 <", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5LessThanOrEqualTo(Integer value) {
            addCriterion("no5 <=", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5In(List<Integer> values) {
            addCriterion("no5 in", values, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotIn(List<Integer> values) {
            addCriterion("no5 not in", values, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5Between(Integer value1, Integer value2) {
            addCriterion("no5 between", value1, value2, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotBetween(Integer value1, Integer value2) {
            addCriterion("no5 not between", value1, value2, "no5");
            return (Criteria) this;
        }

        public Criteria andNo6IsNull() {
            addCriterion("no6 is null");
            return (Criteria) this;
        }

        public Criteria andNo6IsNotNull() {
            addCriterion("no6 is not null");
            return (Criteria) this;
        }

        public Criteria andNo6EqualTo(Integer value) {
            addCriterion("no6 =", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotEqualTo(Integer value) {
            addCriterion("no6 <>", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6GreaterThan(Integer value) {
            addCriterion("no6 >", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6GreaterThanOrEqualTo(Integer value) {
            addCriterion("no6 >=", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6LessThan(Integer value) {
            addCriterion("no6 <", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6LessThanOrEqualTo(Integer value) {
            addCriterion("no6 <=", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6In(List<Integer> values) {
            addCriterion("no6 in", values, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotIn(List<Integer> values) {
            addCriterion("no6 not in", values, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6Between(Integer value1, Integer value2) {
            addCriterion("no6 between", value1, value2, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotBetween(Integer value1, Integer value2) {
            addCriterion("no6 not between", value1, value2, "no6");
            return (Criteria) this;
        }

        public Criteria andMessageNoIsNull() {
            addCriterion("message_no is null");
            return (Criteria) this;
        }

        public Criteria andMessageNoIsNotNull() {
            addCriterion("message_no is not null");
            return (Criteria) this;
        }

        public Criteria andMessageNoEqualTo(Integer value) {
            addCriterion("message_no =", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoNotEqualTo(Integer value) {
            addCriterion("message_no <>", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoGreaterThan(Integer value) {
            addCriterion("message_no >", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("message_no >=", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoLessThan(Integer value) {
            addCriterion("message_no <", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoLessThanOrEqualTo(Integer value) {
            addCriterion("message_no <=", value, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoIn(List<Integer> values) {
            addCriterion("message_no in", values, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoNotIn(List<Integer> values) {
            addCriterion("message_no not in", values, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoBetween(Integer value1, Integer value2) {
            addCriterion("message_no between", value1, value2, "messageNo");
            return (Criteria) this;
        }

        public Criteria andMessageNoNotBetween(Integer value1, Integer value2) {
            addCriterion("message_no not between", value1, value2, "messageNo");
            return (Criteria) this;
        }

        public Criteria andRegdateIsNull() {
            addCriterion("regdate is null");
            return (Criteria) this;
        }

        public Criteria andRegdateIsNotNull() {
            addCriterion("regdate is not null");
            return (Criteria) this;
        }

        public Criteria andRegdateEqualTo(Date value) {
            addCriterion("regdate =", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateNotEqualTo(Date value) {
            addCriterion("regdate <>", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateGreaterThan(Date value) {
            addCriterion("regdate >", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateGreaterThanOrEqualTo(Date value) {
            addCriterion("regdate >=", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateLessThan(Date value) {
            addCriterion("regdate <", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateLessThanOrEqualTo(Date value) {
            addCriterion("regdate <=", value, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateIn(List<Date> values) {
            addCriterion("regdate in", values, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateNotIn(List<Date> values) {
            addCriterion("regdate not in", values, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateBetween(Date value1, Date value2) {
            addCriterion("regdate between", value1, value2, "regdate");
            return (Criteria) this;
        }

        public Criteria andRegdateNotBetween(Date value1, Date value2) {
            addCriterion("regdate not between", value1, value2, "regdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_log
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 23 18:23:42 KST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lucky_log
     *
     * @mbggenerated Tue Feb 23 18:23:42 KST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}